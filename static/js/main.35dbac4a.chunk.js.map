{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","selectedKey","handler","event","setState","code","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAWMA,E,4MACJC,MAAyB,CACvBC,YAAa,I,EAWfC,QAAU,SAACC,GACT,EAAKC,SAAS,CACZH,YAA4B,UAAfE,EAAME,KACf,QACAF,EAAMG,O,uDAZd,WACEC,SAASC,iBAAiB,QAASC,KAAKP,W,kCAG1C,WACEK,SAASG,oBAAoB,QAASD,KAAKP,W,oBAW7C,WACE,IAAQD,EAAgBQ,KAAKT,MAArBC,YAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGV,EAAW,mCACoBA,EADpB,KAER,kC,GA7BIW,IAAMC,WAmCTd,I,MCzCfe,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.35dbac4a.chunk.js","sourcesContent":["import React from 'react';\n\n// export const App: React.FC = () => (\n//   <div className=\"App\">\n//     <p className=\"App__message\">The last pressed key is [Enter]</p>\n//   </div>\n// );\ntype State = {\n  selectedKey: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handler);\n  }\n\n  handler = (event: KeyboardEvent) => {\n    this.setState({\n      selectedKey: event.code === 'Space'\n        ? 'Space'\n        : event.key,\n    });\n  };\n\n  render() {\n    const { selectedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {selectedKey\n            ? `The last pressed key is [${selectedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}